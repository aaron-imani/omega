commit,project,Multi-files?,patch,HM,Rationality (0-4),Comprehensiveness (0-4),Conciseness (0-4),Expressiveness (0-4),FIRA,Rationality (0-4).1,Comprehensiveness (0-4).1,Conciseness (0-4).1,Expressiveness (0-4).1,OMG,Rationality (0-4).2,Comprehensiveness (0-4).2,Conciseness (0-4).2,Expressiveness (0-4).2,MAD,AMG,AMG_OMG_BLEU,AMG_OMG_ROUGEL,AMG_OMG_METEOR,MAD_OMG_BLEU,MAD_OMG_ROUGEL,MAD_OMG_METEOR
89aa7775a83989345756349f99bd3556780eafee,apache/ant,,"File: src/main/org/apache/tools/ant/taskdefs/condition/Os.java
Status: modified
```diff
@@ -65,8 +65,24 @@
 public class Os implements Condition {
     private String family;
 
+    /**
+     * Sets the desired OS family type
+     * 
+     * @param f      The OS family type desired<br />
+     *               Possible values:<br />
+     *               <ul><li>dos</li>
+     *               <li>mac</li>
+     *               <li>netware</li>
+     *               <li>unix</li>
+     *               <li>windows</li></ul>
+     */
     public void setFamily(String f) {family = f.toLowerCase();}
 
+    /**
+     * Determines if the OS on which Ant is executing matches the type of 
+     * that set in setFamily.
+     * @see Os#setFamily(String)
+     */
     public boolean eval() throws BuildException {
         String osName = System.getProperty(""os.name"").toLowerCase();
         String pathSep = System.getProperty(""path.separator"");
```",Added some javadocs for OS condition.,4,4,4,4,add javadoc for Os setFamily,4,4,4,4,Feat: Improve documentation in Os.java Added detailed comments to the setFamily and eval methods in the Os.java file. The comments provide information about the functionality of the methods and the expected input for the setFamily method.,3,4,4,4,"feat: Add OS family type setting and matching to Os class
Introduce setFamily method to configure desired OS family type and eval method to determine OS match. This enhancement enables more flexible OS-based conditionals in Ant tasks.","feat: Add OS family type setter and evaluator
This commit introduces a new setter method to specify the desired OS family type and an evaluator method to determine if the current OS matches the specified type. The setter method converts the input to lowercase, and the evaluator method uses system properties to determine the OS name and path separator.",4.9,27.08,22.39,6.0,18.92,14.47
ea0ea86ba268d63b39f8e608a746e4aad1eb1b3c,apache/ant,,"File: src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java
Status: modified
```diff
@@ -372,7 +372,7 @@ private void loadResourceMaps() throws BuildException {
         processBundle(bundleFile, 5, false);
 
         bundleFile = bundle + language;
-        processBundle(bundleFile, 6, false);
+        processBundle(bundleFile, 6, true);
     }
 
     /**
```",cancel previous change,0,0,1,4,fix a bug in the Translate,2,2,4,4,"Fix: Update resource map loading in Translate.java This commit updates the method loadResourceMaps() in Translate.java to load resource maps for a specific locale and the default locale, processing each bundle file in a specific order. The change enhances the specificity of the resource map loading process._x001B_[0m",2,4,4,4,"fix: Process bundle files in correct order in Translate task
Ensure the correct resource is used by loading resource maps for the specified locale and default locale in a specific order of priority.","refactor: Improve processBundle method
Refactor the processBundle method to correctly handle the bundle file by setting the third parameter to true. This change ensures that the correct resource is used when processing bundle files.",3.72,24.1,15.28,9.89,39.02,41.95
1a5baa2ad88ff04ee5ffa0d12774bb824ae78082,apache/ant,,"File: src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java
Status: modified
```diff
@@ -130,7 +130,7 @@ public void targetStarted(BuildEvent event) {
             // Since task log category includes target, we don't really
             // need this message
             realLog(log, ""Start: "" + event.getTarget().getName(),
-                    Project.MSG_DEBUG, null);
+                    Project.MSG_VERBOSE, null);
         }
     }
 
```",raise log level of targets to match that of task events,4,4,4,4,fix checkstyle error,0,0,4,4,"Refactor: Change logging level in targetStarted method The logging level in the `targetStarted` method of the `CommonsLoggingListener` class has been changed from `Project.MSG_DEBUG` to `Project.MSG_VERBOSE`. This is a refactor commit, meaning the code has been changed to improve its internal structure without altering its external behavior. The functionality of the `targetStarted` method, which logs the start of a target during a build process, remains the same.",4,4,4,4,"refactor: Update log level to verbose in targetStarted method
Changed the log level from Project.MSG_DEBUG to Project.MSG_VERBOSE in the targetStarted method of CommonsLoggingListener to provide more user-friendly feedback during the build process.","refactor: Update log level in targetStarted method
Changed the log level from DEBUG to VERBOSE in the targetStarted method of CommonsLoggingListener to provide more user-friendly feedback during the build process.",5.29,34.34,22.91,17.57,40.0,27.64
f6e15244da3418871f2ee4f076d08582cb967511,apache/cassandra,,"File: src/java/org/apache/cassandra/concurrent/RetryingScheduledThreadPoolExecutor.java
Status: modified
```diff
@@ -1,4 +1,25 @@
 package org.apache.cassandra.concurrent;
+/*
+ * 
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ * 
+ */
+
 
 import java.util.concurrent.*;
 
```",add missing license header,4,4,4,4,add missing license header,4,4,4,4,Style: Add license header to RetryingScheduledThreadPoolExecutor.java A license header has been added to the file RetryingScheduledThreadPoolExecutor.java. This change is related to the style of the code and does not affect the functionality of the program.,4,4,3,4,"style: Add license header to RetryingScheduledThreadPoolExecutor.java
The file lacked the standard Apache license header, which is now included.","style: Add Apache License header to RetryingScheduledThreadPoolExecutor
Added the Apache License header to the RetryingScheduledThreadPoolExecutor.java file, which was missing the necessary licensing information.",9.68,40.0,26.94,13.69,32.73,25.31
579eb229519e5e3b276f918b89158a242c2dec34,apache/cassandra,,"File: src/java/org/apache/cassandra/db/compaction/CompactionTask.java
Status: modified
```diff
@@ -261,8 +261,11 @@ protected void runWith(File sstableDirectory) throws Exception
         Map<Integer, Long> mergedRows = new HashMap<Integer, Long>();
         for (int i = 0; i < counts.length; i++)
         {
-            int rows = i + 1;
             long count = counts[i];
+            if (count == 0)
+                continue;
+
+            int rows = i + 1;
             totalSourceRows += rows * count;
             mergeSummary.append(String.format(""%d:%d, "", rows, count));
             mergedRows.put(rows, count);
```",omit zero counts from compaction merge summary,0,4,4,4,fix a bug in CompactionTask,2,2,4,4,"Fix: Skip iteration if count is zero in compaction operation This commit introduces a fix in the `runWith(File sstableDirectory)` method in the `CompactionTask.java` file. The change involves the addition of a conditional statement to skip an iteration if the count is zero during the compaction operation. This modification ensures that the compaction operation is only performed when necessary, and a snapshot is taken if required.",4,3,3,4,"fix: Ignore zero count rows in CompactionTask
Prevent unnecessary processing of rows with zero count in the runWith method, improving the compaction process.","refactor: Optimize CompactionTask runWith method
Improved the efficiency of the runWith method in CompactionTask by skipping zero-count rows, reducing unnecessary iterations and improving overall performance.",1.39,11.11,9.98,1.47,18.18,12.42
ef67b60273d1d2b3e9b5b488311625717c161d34,apache/cassandra,,"File: src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java
Status: modified
```diff
@@ -51,7 +51,7 @@ public class CommitLogArchiver
     }
 
     public final Map<String, Future<?>> archivePending = new ConcurrentHashMap<String, Future<?>>();
-    public final ExecutorService executor = new JMXEnabledThreadPoolExecutor(""commitlog_archiver"");
+    public final ExecutorService executor = new JMXEnabledThreadPoolExecutor(""CommitLogArchiver"");
     private final String archiveCommand;
     private final String restoreCommand;
     private final String restoreDirectories;
```",Make commitlog archiver thread pool name consistent CASSANDRA-7043,4,4,4,4,fix typo in CommitLogArchiver,0,0,4,4,"Style: Standardize thread pool name in CommitLogArchiver This commit changes the thread pool name in the CommitLogArchiver class from ""commitlog_archiver"" to ""CommitLogArchiver"". This change was made to make the thread pool name consistent with others in the codebase, as per issue CASSANDRA-7043.",4,4,4,4,"refactor: Rename CommitLogArchiver thread pool to match convention
Update thread pool name from 'commitlog_archiver' to 'CommitLogArchiver' to conform to the naming convention used by other thread pools. This change may impact monitoring applications.","fix: Rename CommitLogArchiver thread pool to match naming convention
Fixes CASSANDRA-7043. The thread pool name was inconsistent with others, showing up in tpstats output. This change updates the name to CommitLogArchiver, making it consistent with other thread pool names.",15.3,32.1,47.89,18.91,34.21,34.6
de05e13417eb1e1ab77b3e28405a18a6e84a3526,apache/cocoon,,"File: src/java/org/apache/cocoon/components/modules/input/XMLFileModule.java
Status: modified
```diff
@@ -86,7 +86,7 @@ INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-
  *
  * @author <a href=""mailto:jefft@apache.org"">Jeff Turner</a>
  * @author <a href=""mailto:haul@apache.org"">Christian Haul</a>
- * @version CVS $Id: XMLFileModule.java,v 1.8 2003/05/19 00:25:51 jefft Exp $
+ * @version CVS $Id: XMLFileModule.java,v 1.9 2003/05/20 09:17:57 jefft Exp $
  */
 public class XMLFileModule extends AbstractJXPathModule
     implements Composable, ThreadSafe {
@@ -276,11 +276,12 @@ protected Object getContextObject(Configuration modeConf,
                         ""missing 'file' child element at "" + 
                         modeConf.getLocation());
                 */
+            } else {
+              hasDynamicConf = true;
             }
-            hasDynamicConf = true;
         }
 
-        if (hasDynamicConf && fileConf != null) {
+        if (hasDynamicConf) {
             src = fileConf.getAttribute(""src"");
         }
 
```",Replace hack with a more sensible test.,0,0,4,4,do not dynamic dynamic dynamic file,0,0,4,0,"Refactor: Improve structure of getContextObject method in XMLFileModule This commit refactors the getContextObject method in the XMLFileModule class. The changes improve the structure of the code without altering its behavior. The method retrieves a context object based on the provided configuration and object model, checking for a dynamic configuration and updating the source and reload if present. The changes ensure a more efficient handling of dynamic configurations.",4,4,3,4,"refactor: Set hasDynamicConf correctly in getContextObject
Refactor the getContextObject method to handle dynamic configuration correctly. The method now sets hasDynamicConf to true when necessary, and uses fileConf.getAttribute('src') only when hasDynamicConf is true.","refactor: Improve getContextObject method logic
Refactored the getContextObject method to handle dynamic configuration more efficiently. The method's logic has been reorganized to reduce redundancy and improve performance.",3.03,23.66,19.18,4.13,18.18,13.49
258d7f0a4f9bb6e6cf057ebcd7f9c30662d0aad2,apache/cocoon,,"File: blocks/cocoon-xsp/cocoon-xsp-impl/src/main/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java
Status: modified
```diff
@@ -28,6 +28,7 @@
  * The <code>Session-fw</code> object helper
  *
  * @version $Id$
+ * @deprecated This class is deprecated and will be removed in future versions.
  * @since 2.1.1
  */
 public class XSPSessionFwHelper {
```",Deprecate session-fw and auth-fw block,4,4,4,2,add missing javadoc,0,1,4,4,Style: Mark XSPSessionFwHelper class as deprecated The XSPSessionFwHelper class in the cocoon-xsp-impl module has been marked as deprecated. This class will be removed in future versions.,4,4,4,4,"refactor: Deprecate XSPSessionFwHelper
Mark the class as deprecated, indicating it will be removed in future versions.","refactor: Deprecate XSPSessionFwHelper class
This commit marks the XSPSessionFwHelper class as deprecated, indicating that it will be removed in future versions. This change does not affect the functionality of the class, but serves as a warning to users that it will be phased out.",23.68,34.78,55.79,23.96,48.78,43.16
b27c808c89bc0b06dad6c8428aa358e021d38f36,apache/cocoon,,"File: core/cocoon-core/src/main/java/org/apache/cocoon/components/source/SourceUtil.java
Status: modified
```diff
@@ -87,7 +87,7 @@ static private ServiceManager getSitemapServiceManager() {
             uripattern = new RECompiler().compile(""^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$"");
         } catch (RESyntaxException e) {
             // Should not happen
-            e.printStackTrace();
+            throw new RuntimeException(""Error parsing regular expression."", e);
         }
     }
 
```",Throw exception *if* it happens,0,2,4,3,don t throw exceptions in SourceUtil,0,0,4,3,"Fix: Improve error handling in SourceUtil Changed the error handling in the method getSitemapServiceManager() of the class SourceUtil.java. Instead of printing the stack trace, now it throws a RuntimeException with a descriptive message.",4,4,4,4,"fix: Throw RuntimeException on RESyntaxException in SourceUtil
Prevents silent failures by propagating the exception instead of printing the stack trace.","fix: Handle RESyntaxException in SourceUtil
Previously, when a RESyntaxException occurred in SourceUtil, it was caught and the stack trace was printed. This commit changes the behavior to throw a RuntimeException instead, providing more context about the error.",10.23,25.71,33.8,13.52,33.96,32.27
5ce848b860c02a77a8d45757b11ebd2ece71fbb9,apache/directory-server,Y,"File: core/src/main/java/org/apache/ldap/server/jndi/ContextFactoryConfiguration.java
Status: modified
```diff
@@ -27,6 +27,7 @@
 import org.apache.ldap.server.invocation.Invocation;
 import org.apache.ldap.server.schema.GlobalRegistries;
 
+/** FIXME Rename to ContextFactoryContext */
 public interface ContextFactoryConfiguration
 {
     /**
```


File: core/src/main/java/org/apache/ldap/server/jndi/DefaultContextFactoryConfiguration.java
Status: modified
```diff
@@ -66,6 +66,7 @@
 
 /**
  * Provides everything required to {@link AbstractContextFactory}.
+ * FIXME Rename to DefaultContextFactoryContext
  * 
  * @author <a href=""mailto:dev@directory.apache.org"">Apache Directory Project</a>
  * @version $Rev$
```",These two classes should be reverted back to their old names.,2,4,4,4,add missing javadoc,0,0,4,4,Style: Add comments to suggest renaming classes Added comments in ContextFactoryConfiguration.java and DefaultContextFactoryConfiguration.java to suggest renaming the classes to ContextFactoryContext and DefaultContextFactoryContext respectively.,3,4,4,4,"style: Add FIXME comments to suggest class renames
Added FIXME comments to ContextFactoryConfiguration and DefaultContextFactoryConfiguration to indicate potential renames to ContextFactoryContext and DefaultContextFactoryContext, respectively.","refactor: Rename ContextFactoryConfiguration and DefaultContextFactoryConfiguration
This commit renames ContextFactoryConfiguration and DefaultContextFactoryConfiguration to ContextFactoryContext and DefaultContextFactoryContext, respectively, as suggested by the FIXME comments. This change improves the code organization and naming consistency.",17.57,29.09,34.39,28.82,62.5,58.53
b5546be3333d7a261e6db37ab6e36f34193cffbb,apache/directory-server,Y,"File: core-integ/src/test/java/org/apache/directory/server/core/operations/add/AddIT.java
Status: renamed
```diff
@@ -17,7 +17,7 @@
  *  under the License.
  *
  */
-package org.apache.directory.server.core.jndi;
+package org.apache.directory.server.core.operations.add;
 
 
 import static org.apache.directory.server.core.integ.IntegrationUtils.getAdminConnection;
```


File: core-integ/src/test/java/org/apache/directory/server/core/suites/MigratedStockCoreISuite.java
Status: modified
```diff
@@ -39,7 +39,7 @@
 import org.apache.directory.server.core.event.EventServiceIT;
 import org.apache.directory.server.core.exception.ExceptionServiceIT;
 import org.apache.directory.server.core.integ.FrameworkSuite;
-import org.apache.directory.server.core.jndi.AddIT;
+import org.apache.directory.server.core.operations.add.AddIT;
 import org.apache.directory.server.core.operations.add.PasswordHashingInterceptorTest;
 import org.apache.directory.server.core.operations.move.MoveIT;
 import org.junit.runner.RunWith;
```",Moved the AddIT test to the operations package,4,4,4,4,move üòÖ to the correct package,3,0,3,1,Refactor: Update package name of AddIT.java and import in MigratedStockCoreISuite.java The package name of the AddIT.java file has been refactored from 'org.apache.directory.server.core.jndi' to 'org.apache.directory.server.core.operations.add'. The import statement in the MigratedStockCoreISuite.java file has been updated to reflect this change. This refactoring improves the structure of the code without changing its behavior.,4,4,4,4,"refactor: Move AddIT.java to org.apache.directory.server.core.operations.add package
Renamed package from org.apache.directory.server.core.jndi to org.apache.directory.server.core.operations.add","refactor: Rename AddIT.java to new package
Rename AddIT.java from org/apache/directory/server/core/jndi to org/apache/directory/server/core/operations/add and update its import statement in MigratedStockCoreISuite.java to reflect the new package location.",4.6,32.61,24.41,28.73,40.43,10.9
de9a33a49d34b5cff206f2a2d9d71708b5473c53,spepping/fop-cs,,"File: src/java/org/apache/fop/fonts/type1/PFMInputStream.java
Status: modified
```diff
@@ -19,6 +19,7 @@
 
 package org.apache.fop.fonts.type1;
 
+import java.io.EOFException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.DataInputStream;
@@ -30,7 +31,7 @@
  */
 public class PFMInputStream extends java.io.FilterInputStream {
 
-    private DataInputStream datain;
+    private final DataInputStream datain;
 
     /**
      * Constructs a PFMInputStream based on an InputStream representing the
@@ -97,10 +98,14 @@ public long readInt() throws IOException {
     public String readString() throws IOException {
         InputStreamReader reader = new InputStreamReader(in, ""ISO-8859-1"");
         StringBuffer buf = new StringBuffer();
+
         int ch = reader.read();
         while (ch != 0) {
             buf.append((char)ch);
             ch = reader.read();
+            if (ch == -1) {
+                throw new EOFException(""Unexpected end of stream reached"");
+            }
         }
         return buf.toString();
     }
```",Make PFM string parsing a little more robust,4,4,4,4,throw an exception if the datain is not read,0,0,4,4,Fix: Handle unexpected end of stream in readString method This commit modifies the readString method in the PFMInputStream.java file to throw an EOFException when the end of the stream is reached unexpectedly. This change ensures that the method can handle unexpected end of stream scenarios and prevent potential errors.,4,4,4,4,"fix: Throw EOFException when reaching end of stream in readString
Added a check to prevent unexpected end of stream errors by throwing an EOFException when the end of the stream is reached in the readString method.","refactor: Improve PFMInputStream's readString method
This commit refactors the readString method in PFMInputStream to handle unexpected end of stream by throwing an EOFException. Additionally, the DataInputStream field is now final. These changes improve the robustness and thread-safety of the class.",16.33,31.46,34.04,29.29,42.35,47.73
bd2f2315d786b27a9e3488b3b5b4003370eb2146,apache/geronimo,,"File: plugins/geronimo-packaging-plugin/src/java/org/apache/geronimo/plugin/packaging/MavenConfigStore.java
Status: modified
```diff
@@ -133,6 +133,9 @@ public void install(ConfigurationData configurationData, File source) throws IOE
         URI configId = configurationData.getId();_x000D_
         URL targetURL = repository.getURL(configId);_x000D_
         File targetFile = new File(targetURL.getPath());_x000D_
+        File parentFile = targetFile.getParentFile();_x000D_
+        parentFile.mkdirs();_x000D_
+        targetFile.createNewFile();_x000D_
         ExecutableConfigurationUtil.createExecutableConfiguration(configurationData, null, source, targetFile);_x000D_
     }_x000D_
 _x000D_
```",This might help create the client cars,1,0,4,4,create maven maven repository,0,0,4,3,Fix: Ensure parent directories exist when installing configuration This commit modifies the `install` method in the `MavenConfigStore` class to create the necessary parent directories if they do not exist when installing a configuration from a source directory to a target file. This change ensures that the installation process does not fail due to missing parent directories.,4,4,4,4,"refactor: Ensure target file's parent directory exists in MavenConfigStore
Create parent directories as needed when installing a configuration from a source directory to a target file in the repository.","refactor: Ensure target file's parent directory exists in MavenConfigStore
This commit refactors the install method in MavenConfigStore to create the necessary directories and files as needed, ensuring the target file's parent directory exists. This change improves the internal structure of the code, making it more robust and easier to maintain.",13.63,34.29,38.95,17.11,42.86,36.05
cfcb9a42f34dfd038be2451a7a5ed62e3753810e,apache/ignite,,"File: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheProxy.java
Status: modified
```diff
@@ -336,7 +336,13 @@ else if (filter instanceof SpiQuery) {
      * @return Local node cluster group.
      */
     private ClusterGroup projection(boolean local) {
-        return local || ctx.isLocal() || ctx.isReplicated() ? ctx.kernalContext().grid().cluster().forLocal() : null;
+        if (local || ctx.isLocal() || isReplicatedDataNode())
+            return ctx.kernalContext().grid().cluster().forLocal();
+
+        if (ctx.isReplicated())
+            return ctx.kernalContext().grid().cluster().forDataNodes(ctx.name()).forRandom();
+
+        return null;
     }
 
     /**
```",ignite-sql-tests - replicated projection,0,0,2,0,don t use deprecated method,0,0,4,4,"Refactor: Update logic in `projection(boolean local)` method in `IgniteCacheProxy.java` This commit refactors the `projection(boolean local)` method in the `IgniteCacheProxy.java` class. The method now determines the cluster group for the cache data based on the cache mode and local flag. This is a change in the internal logic of the method, but it does not affect the external behavior or functionality of the method.",3,4,4,4,"refactor: Refactor ClusterGroup projection logic to consider locality and replication mode
Improve the private ClusterGroup projection method in IgniteCacheProxy to handle data node projection based on node context and local flag.","refactor: Improve cluster group projection logic
Refactor the private ClusterGroup projection method to handle local and replicated data nodes more accurately. The new implementation considers the node's locality and replication settings to determine the correct cluster group for projection.",3.96,17.48,16.78,4.93,25.26,16.97
f519fc599e420638ad53b8e53b92b8d22bfdd773,apache/ignite,,"File: modules/core/src/main/java/org/apache/ignite/internal/pagemem/wal/record/WALRecord.java
Status: modified
```diff
@@ -41,7 +41,10 @@ public enum RecordType {
         STORE_OPERATION_RECORD,
 
         /** */
-        CHECKPOINT_RECORD;
+        CHECKPOINT_RECORD,
+
+        /** */
+        HEADER_RECORD;
 
         /** */
         private static final RecordType[] VALS = RecordType.values();
@@ -53,7 +56,7 @@ public static RecordType fromOrdinal(int ord) {
     }
 
     /** */
-    private int size = -1;
+    private int size;
 
     /** */
     private int chainSize;
@@ -104,15 +107,15 @@ public long position() {
      * @param pos Position in file.
      */
     public void position(long pos) {
+        assert pos >= 0: pos;
+
         this.pos = pos;
     }
 
     /**
      * @return Size of this record in bytes.
      */
     public int size() {
-        assert size != -1;
-
         return size;
     }
 
```",ignite-db-x - wal header,0,0,0,0,add more info to assertion,0,1,4,4,"Feat: Add non-negative assertion to position method and new enum value In the WALRecord.java file, the position method now includes an assertion that ensures the position value is non-negative. This is a new feature added to improve the robustness of the method. Additionally, a new enum value, HEADER_RECORD, has been added to the RecordType enum. The initial value for the size variable has also been removed.",4,4,4,4,"feat: Add HEADER_RECORD to WALRecord and validate position
This change introduces a new record type, HEADER_RECORD, to the WALRecord enum. Additionally, it adds a validation check to ensure that the position is non-negative in the position() method, making the record handling more robust.","refactor: Enhance WALRecord with additional record type and input validation
This commit refactors the WALRecord class to include a new record type, HEADER_RECORD, and adds input validation to the position method to ensure non-negative values. These changes improve the internal structure and functionality of the WALRecord class.",6.34,20.87,19.08,7.24,26.79,24.16
e82e198a9f848708b922038b280830246650e914,apache/jclouds,,"File: providers/gogrid/src/test/java/org/jclouds/gogrid/GoGridLiveTestDisabled.java
Status: modified
```diff
@@ -354,8 +354,7 @@ public void testShellAccess() throws IOException {
 
       socketOpen.apply(socket);
 
-      SshClient sshClient = new SshjSshClient(new BackoffLimitedRetryHandler(), socket, 60000,
-               instanceCredentials.identity, instanceCredentials.credential, null);
+      SshClient sshClient = context.utils().injector().getInstance(SshClient.Factory.class).create(socket, instanceCredentials);
       sshClient.connect();
       String output = sshClient.exec(""df"").getOutput();
       assertTrue(output.contains(""Filesystem""),
```",changed gogrid to not use ssh ctor,0,1,1,0,fix the test,2,1,4,4,"Refactor: Update SSH connection in testShellAccess method In the testShellAccess() method of the GoGridLiveTestDisabled.java file, the way an SSH connection is established has been refactored. Instead of creating a new SshjSshClient instance directly, the method now retrieves an instance of SshClient.Factory from the context's injector and uses it to create the SshClient. This change improves the structure of the code without altering its functionality.",4,4,4,4,"refactor: Replace hardcoded SshClient constructor with injector-based creation
This change improves the test's modularity and maintainability by using the injector to create the SshClient instance, rather than hardcoding it.","refactor: Improve SshClient creation in GoGridLiveTestDisabled
Refactor the way SshClient is created in GoGridLiveTestDisabled to use the context.utils().injector().getInstance(SshClient.Factory.class).create method, making the code more modular and easier to maintain.",3.65,20.2,16.51,4.34,17.02,16.84
559a37ceff1f7d5dc83cd32e377610e410769eeb,apache/jclouds,,"File: labs/jenkins/src/test/java/org/jclouds/jenkins/v1/features/ComputerClientLiveTest.java
Status: modified
```diff
@@ -39,8 +39,10 @@ public void testGetComputerView(){
       assertNotNull(view.getDisplayName());
       for (Computer computerFromView : view.getComputers()) {
          assertNotNull(computerFromView.getDisplayName());
-         Computer computerFromGetRequest = getClient().getComputer(computerFromView.getDisplayName());
-         assertEquals(computerFromGetRequest, computerFromView);
+         if (!""master"".equals(computerFromView.getDisplayName())) {
+            Computer computerFromGetRequest = getClient().getComputer(computerFromView.getDisplayName());
+            assertEquals(computerFromGetRequest, computerFromView);
+         }
       }
    }
 
```",master is not accessible via getComputer,4,4,4,4,fix failing test,2,2,4,4,"Fix: Exclude ""master"" from testGetComputerView() test In the testGetComputerView() method in the ComputerClientLiveTest.java file, a condition has been added to exclude the ""master"" from the test. This change ensures that the test only validates the display name of each computer in the view, excluding the ""master"".",4,4,4,4,"fix: Ignore master computer in testGetComputerView
Modified testGetComputerView to account for the 'master' computer's unique behavior, which may cause assertion failures. This change ensures the test remains reliable and focused on verifying the ComputerClient API's functionality.","refactor: Improve testGetComputerView method
Refactor the testGetComputerView method to exclude 'master' computers from the assertion, making the test more robust and accurate. This change improves the testing of the ComputerClient API by retrieving and verifying computer views and details.",9.51,35.29,33.85,9.97,31.71,26.92
7d3fd73ee5e0ed47e256aa6e95609189f667e92b,apache/jena,,"File: jena-fuseki/src/main/java/org/apache/jena/fuseki/FusekiCmd.java
Status: modified
```diff
@@ -26,6 +26,7 @@
 
 import org.apache.jena.atlas.io.IO ;
 import org.apache.jena.atlas.lib.FileOps ;
+import org.apache.jena.atlas.lib.Lib ;
 import org.apache.jena.atlas.lib.StrUtils ;
 import org.apache.jena.atlas.logging.Log ;
 import org.apache.jena.fuseki.mgt.ManagementServer ;
@@ -49,6 +50,7 @@
 import com.hp.hpl.jena.sparql.core.DatasetGraphFactory ;
 import com.hp.hpl.jena.tdb.TDB ;
 import com.hp.hpl.jena.tdb.TDBFactory ;
+import com.hp.hpl.jena.tdb.sys.Names ;
 import com.hp.hpl.jena.tdb.transaction.TransactionManager ;
 
 public class FusekiCmd extends CmdARQ
@@ -284,9 +286,14 @@ protected void processModulesAndArgs()
         if ( contains(argTDB) )
         {
             String dir = getValue(argTDB) ;
-            log.info(""TDB dataset: directory=""+dir) ;
-            if ( ! FileOps.exists(dir) )
-                throw new CmdException(""Directory not found: ""+dir) ;
+            
+            if ( Lib.equal(dir, Names.memName) ) {
+                log.info(""TDB dataset: in-memory"") ;
+            } else {
+                if ( ! FileOps.exists(dir) )
+                    throw new CmdException(""Directory not found: ""+dir) ;
+                log.info(""TDB dataset: directory=""+dir) ;
+            }
             dsg = TDBFactory.createDatasetGraph(dir) ;
         }
         
```","Allow lcoation '--mem--' on the command line (TDB, in-memory). Same effect as --memTDB",4,4,4,4,improve exception message,0,0,4,4,"Feat: Add in-memory TDB dataset handling in FusekiCmd This commit adds the ability to handle in-memory TDB datasets in the FusekiCmd class. Specifically, the processModulesAndArgs() method has been modified to check if the directory is equal to Names.memName. If so, it logs that the TDB dataset is in-memory. If not, it checks if the directory exists and logs the directory of the TDB dataset. This feature enhances the flexibility of handling TDB datasets.",4,4,3,4,"refactor: Improve TDB dataset handling
Handle the case where the TDB dataset is in-memory by checking for the special directory name. This allows for more flexibility in configuring the Fuseki server.","refactor: Improve TDB dataset handling
Refactor the processModulesAndArgs method to handle TDB dataset directories more robustly, including in-memory datasets. This change improves the configuration and setup of the Fuseki server.",2.9,25.24,16.64,4.36,23.08,15.21
bfaa285c92cb44742553d2035b26d8e20edba5d1,apache/jmeter,,"File: src/protocol/http/org/apache/jmeter/protocol/http/sampler/ParseRegexp.java
Status: modified
```diff
@@ -72,7 +72,8 @@
 import org.apache.jorphan.logging.LoggingManager;
 import org.apache.log.Logger;
 
-// TODO: look at using Java 1.4 regexp instead of ORO.
+// NOTE: Also looked at using Java 1.4 regexp instead of ORO. The change was
+// trivial. Performance did not improve -- at least not significantly. [Jordi]
 import org.apache.oro.text.regex.MatchResult;
 import org.apache.oro.text.regex.Pattern;
 import org.apache.oro.text.regex.PatternMatcherInput;
```",Add comment on ORO-vs-java.util.regex for posterity.,4,4,4,4,fix import order,0,0,4,4,Refactor: Update comment in ParseRegexp.java The comment in the ParseRegexp.java file was updated to reflect that the consideration of using Java 1.4 regexp instead of ORO did not significantly improve performance.,4,4,4,4,"style: Update comment to reflect Java 1.4 regexp investigation
Changed TODO to NOTE and added a comment about the performance impact of using Java 1.4 regexp instead of ORO.","style: Update comment about using Java 1.4 regexp
Updated a TODO comment to a NOTE comment, providing feedback on the result of investigating the use of Java 1.4 regexp instead of ORO, which did not improve performance significantly.",22.74,49.32,52.93,25.72,43.75,47.32
b4d3fcd1df15af8d22c1d0c446b672ca480347f2,apache/jmeter,,"File: src/protocol/http/org/apache/jmeter/protocol/http/proxy/ProxyControl.java
Status: modified
```diff
@@ -381,12 +381,14 @@ public synchronized void deliverSampler(HTTPSamplerBase sampler, TestElement[] s
 
 			placeSampler(sampler, subConfigs, myTarget);
 
-			notifySampleListeners(new SampleEvent(result, sampler.getName()));
+			notifySampleListeners(new SampleEvent(result, ""WorkBench"")); // TODO - is this the correct threadgroup name?
 		}
 		else {
 			if(log.isDebugEnabled()) {
 				log.debug(""Sample excluded based on url or content-type: "" + result.getUrlAsString() + "" - "" + result.getContentType());
 			}
+			result.setSampleLabel(""[""+result.getSampleLabel()+""]"");
+			notifySampleListeners(new SampleEvent(result, ""WorkBench"")); // TODO - is this the correct threadgroup name?
 		}
 	}
 
```",Correct the SampleEvent parameter Deliver excluded samples as [name],3,2,4,4,do not notify the listeners to the sample,0,0,4,4,"Fix: Modify deliverSampler method in ProxyControl.java This commit modifies the deliverSampler method in the ProxyControl.java file. The method now filters the sampler based on content type and URL, modifies its configurations, and places it in the target controller node. If the sampler is excluded based on URL or content-type, it now notifies the sample listeners.",3,2,3,4,"refactor: Use 'WorkBench' as thread group name in notifySampleListeners
Updated notifySampleListeners to use 'WorkBench' as the thread group name and added sample label to result when sample is excluded based on url or content-type.","refactor: Update deliverSampler method to use WorkBench thread group name
Refactored the deliverSampler method to use 'WorkBench' as the thread group name when notifying sample listeners. This change ensures that the correct thread group name is used when processing samples.",5.9,16.67,14.91,9.48,22.22,20.23
420947c1d431f2ce795d13e995c79eec4ae8d040,apache/jmeter,,"File: src/core/org/apache/jmeter/engine/util/FunctionParser.java
Status: modified
```diff
@@ -134,9 +134,9 @@ Object makeFunction(StringReader reader) throws InvalidVariableException {
                         if (reader.read(current) == 0 || current[0] != '}') {
                             reader.reset();// set to start of string
                             char []cb = new char[100];
-                            reader.read(cb);// return deliberately ignored
+                            int nbRead = reader.read(cb);
                             throw new InvalidVariableException
-                            (""Expected } after ""+funcName+"" function call in ""+new String(cb));
+                            (""Expected } after ""+funcName+"" function call in ""+new String(cb, 0, nbRead));
                         }
                         if (function instanceof TestListener) {
                             StandardJMeterEngine.register((TestListener) function);
```",Read return value of read,0,3,4,3,add a variable to FunctionParser,0,1,4,4,"Refactor: Simplify failure message assignment in ResponseAssertion In the `getResult` method of `ResponseAssertion.java`, the assignment of the failure message in the `AssertionResult` object has been simplified. The failure message is now set using `response.responseDatatoString()` instead of `new String((byte[]) response.getResponseData())`. This change improves readability and maintainability of the code.",3,2,4,4,"fix: Handle read count in FunctionParser's InvalidVariableException message
Previously, the exception message was truncated due to ignoring the read count. This fix ensures the correct error message is constructed.","fix: Handle read result in FunctionParser
Fixed an issue in FunctionParser where the read result from the StringReader was ignored, leading to incorrect error messages. Now, the read result is properly handled and used to construct the error message.",3.14,17.98,15.03,3.31,17.72,16.33
8d609412395e97d79b09f18c2f0aded10bb055e4,apache/jmeter,,"File: src/protocol/native/org/apache/jmeter/protocol/system/NativeCommand.java
Status: modified
```diff
@@ -48,4 +48,4 @@ public NativeCommand(File directory, Map<String, String> env, String stdin, Stri
         super(directory, 0L, 100, env, stdin, stdout, stderr);
     }
 
-}
\ No newline at end of file
+}
```",Add EOL at EOF,4,4,4,3,fix checkstyle error,0,0,4,4,"Style: Add newline at end of NativeCommand.java This commit adds a newline at the end of the NativeCommand.java file. The change is purely stylistic and does not affect the functionality of the NativeCommand class, which executes system commands with specified environment variables and working directory.",4,4,2,4,"style: Add newline at end of file
Fixed missing newline at the end of NativeCommand.java","style: Remove trailing whitespace
Removed unnecessary newline at the end of the file to maintain consistent file formatting.",5.39,25.0,15.61,8.31,41.94,24.73
30eedfb62610381a93bad4187eb2283d07489674,apache/maven,,"File: maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java
Status: modified
```diff
@@ -211,7 +211,12 @@ private void verifyMojoPhase( String task, MavenSession session )
         {
             pluginManager.verifyPluginForGoal( task, session );
             mojoDescriptor = pluginManager.getMojoDescriptor( task );
-            if ( mojoDescriptor != null && mojoDescriptor.getPhase() != null )
+            if ( mojoDescriptor == null )
+            {
+                throw new LifecycleExecutionException( ""Required goal not found: "" + task );
+            }
+
+            if ( mojoDescriptor.getPhase() != null )
             {
                 Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
                 phase.getGoals().add( task );
```",add missing error message when the package goal is not found,4,4,4,4,fix potential npe,0,1,4,4,"Fix: Add validation for mojo phase in verifyMojoPhase method This commit adds a validation in the `verifyMojoPhase` method of the `DefaultLifecycleExecutor` class to check if the given task is a valid mojo phase. If the task is not a valid mojo phase, an exception is thrown. This change improves the error handling in the method and ensures that only valid tasks are processed.",4,4,4,4,"fix: Throw exception when mojo descriptor is null
Verify mojo phase for a given task by checking for null mojo descriptor and throwing a LifecycleExecutionException if the required goal is not found. This fix ensures proper error handling in the DefaultLifecycleExecutor.","fix: Verify mojo phase for a given task
This commit fixes the verification of mojo phase for a given task by throwing a LifecycleExecutionException if the required goal is not found. It ensures that the plugin and phase are properly configured and registered during the Maven build lifecycle.",5.45,29.09,25.32,8.64,31.07,29.33
92e731eb8007890b624f8b88984980660a2e587a,apache/maven,,"File: maven-core/src/main/java/org/apache/maven/plugin/PluginException.java
Status: modified
```diff
@@ -21,6 +21,7 @@
  *
  * @author <a href=""mailto:carlos@apache.org"">Carlos Sanchez</a>
  * @version $Id$
+ * @since 2.0.5
  */
 public abstract class PluginException
     extends Exception
```",Added @SInCE tag,4,4,4,4,add missing javadoc,0,0,4,4,Style: Add version comment to PluginException.java A comment indicating the version since the PluginException.java file exists was added. This change does not affect the functionality of the code.,4,4,4,4,"style: Add @since tag to PluginException.java
Updated the PluginException class to include version information.","style: Add @since tag to PluginException class
Added the @since 2.0.5 tag to the PluginException class to provide version information.",6.57,31.37,18.35,6.8,27.27,16.89
1cb3190b0faf83c77f93dcf2ca9c76b62021e2bf,apache/maven,,"File: maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java
Status: modified
```diff
@@ -609,7 +609,7 @@ public void executeMojo( MavenProject project,
             if ( getLogger().isFatalErrorEnabled() )
             {
                 getLogger().fatalError(
-                                        mojo.getClass().getName() + ""#execute() caused a linkage error (""
+                                        mojoDescriptor.getImplementation() + ""#execute() caused a linkage error (""
                                             + e.getClass().getName() + "") and may be out-of-date. Check the realms:"" );
 
                 StringBuffer sb = new StringBuffer();
```",Make the error message construction a little more resilient to errors in classloading.,3,3,4,4,use the correct implementation of the mojo,0,0,4,4,"Refactor: Improve error logging in executeMojo method In the `executeMojo` method of the `DefaultPluginManager.java` file, the way of logging an error message has been improved. Instead of using `mojo.getClass().getName()`, it now uses `mojoDescriptor.getImplementation()`. This change does not affect the functionality of the method, but it makes the error reporting and logging more accurate.",4,4,4,4,"fix: Use mojoDescriptor.getImplementation() in linkage error message
Previously, the error message used mojo.getClass().getName(), which is incorrect. This change fixes the linkage error message to include the correct implementation class name.","fix: Improve error message for linkage error
When a linkage error occurs during mojo execution, the error message is now more informative, including the implementation class name. This change enhances the debugging experience by providing more context about the error.",5.33,22.92,23.17,10.61,24.72,20.86
e07b60d81466c0d07ef2bfd694b222806ea18880,apache/poi,,"File: src/scratchpad/testcases/org/apache/poi/hwpf/converter/TestWordToFoConverter.java
Status: modified
```diff
@@ -71,6 +71,15 @@ public void testEquation() throws Exception
                 .contains( ""<!--Image link to '0.emf' can be here-->"" ) );
     }
 
+    public void testInnerTable() throws Exception
+    {
+        final String sampleFileName = ""innertable.doc"";
+        String result = getFoText( sampleFileName );
+
+        assertTrue( result
+                .contains( ""padding-end=\""0.0in\"" padding-start=\""0.0in\"" width=\""1.0770833in\"""" ) );
+    }
+
     public void testHyperlink() throws Exception
     {
         final String sampleFileName = ""hyperlink.doc"";
```",add test case for lost cell properties,4,4,4,4,add unit test for word inner class,4,0,4,3,Feat: Add test method for inner table properties in TestWordToFoConverter A new test method `testInnerTable()` has been added to the `TestWordToFoConverter.java` file. This method tests if the inner table in the document has the correct padding and width properties.,4,4,4,4,"feat: Add test for inner table formatting in Word-to-FO conversion
Verify that the generated FO text for an inner table in a document contains the expected padding and width attributes.","feat: Add test for inner table formatting in Word-to-FO conversion
This commit introduces a new unit test to verify the formatting of inner tables in Word-to-FO conversion. The test method checks for specific padding and width attributes in the generated FO text. This enhancement improves the test coverage of the Word-to-FO conversion feature.",10.67,39.13,45.17,11.89,46.38,38.43
55813d250b8c3f82bfd6401dc698ab669e42fd2d,apache/tomcat,,"File: java/javax/servlet/http/Cookie.java
Status: modified
```diff
@@ -88,8 +88,7 @@ public class Cookie implements Cloneable {
     private String path;       // ;Path=VALUE ... URLs that see the cookie
     private boolean secure;    // ;Secure ... e.g. use SSL
     private int version = 0;   // ;Version=1 ... means RFC 2109++ style
-    // TODO SERVLET3
-    private boolean httpOnly;  // Not in the spec but supported by most browsers
+    private boolean httpOnly;  // Not in cookie specs, but supported by browsers
     
 
     /**
```",Already support httpOnly - update comments,4,4,4,4,remove empty line,0,0,4,4,Style: Update comments in Cookie.java The comments in the Cookie.java file have been updated for clarity. The changes do not affect the functionality of the class.,4,3,4,4,"style: Remove unnecessary TODO comment
Removed TODO comment in Cookie.java, making the code more readable.","style: Remove TODO comment in Cookie class
Removed an outdated TODO comment in the Cookie class, which was related to Servlet 3. The comment was not relevant anymore and has been cleaned up to improve code readability.",9.01,25.0,19.03,9.36,23.26,17.96
de55e922010568aa727ac2e1f4171f0ef574046b,apache/tomcat,,"File: java/org/apache/catalina/startup/Tomcat.java
Status: modified
```diff
@@ -605,7 +605,7 @@ protected void initBaseDir() {
         }
         server.setCatalinaBase(baseFile);
 
-        if (catalinaHome == null) {
+        if (catalinaHome != null) {
             File homeFile = new File(catalinaHome);
             homeFile.mkdirs();
             if (!homeFile.isAbsolute()) {
```",Correct typo that broke nearly all the tests,4,4,4,4,fix npe in Tomcat,4,3,4,4,"Fix: Use Catalina home directory if base directory is not set This commit modifies the `initBaseDir` method in the `Tomcat.java` file. The condition `if (catalinaHome == null)` has been changed to `if (catalinaHome != null)`. This change ensures that the Catalina home directory is used if the base directory is not set, likely fixing a bug where the base directory was not being set correctly.",4,4,4,4,"fix: Check catalinaHome for null before initializing base directory
Previously, the base directory was not correctly set up during Tomcat server initialization when catalinaHome was null. This change fixes the issue by checking for null before initialization.","fix: Correct catalinaHome null check in Tomcat
The initBaseDir method was incorrectly initializing the base directory when catalinaHome was null. This commit fixes the issue by changing the null check to a non-null check, ensuring the base directory is properly initialized.",9.4,25.0,31.82,9.54,22.0,21.09
0b41baf7500b79cfbdfb719bd084fd89bb8b253d,apache/tomcat,Y,"File: webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
Status: modified
```diff
@@ -24,6 +24,11 @@
 import javax.websocket.Session;
 import javax.websocket.server.ServerEndpoint;
 
+/**
+ * The three annotated echo endpoints can be used to test with Autobahn and
+ * the following command ""wstest -m fuzzingclient -s servers.json"". See the
+ * Autobahn documentation for setup and general information.
+ */
 @ServerEndpoint(""/websocket/echoAnnotation"")
 public class EchoAnnotation {
 
```


File: webapps/examples/WEB-INF/classes/websocket/echo/EchoAsyncAnnotation.java
Status: modified
```diff
@@ -25,7 +25,15 @@
 import javax.websocket.Session;
 import javax.websocket.server.ServerEndpoint;
 
-@ServerEndpoint(""/websocket/echoAsyncAnnotation"")
+/**
+ * The three annotated echo endpoints can be used to test with Autobahn and
+ * the following command ""wstest -m fuzzingclient -s servers.json"". See the
+ * Autobahn documentation for setup and general information.
+ *
+ * Note: This one is disabled by default since it allocates memory, and needs
+ * to be enabled back.
+ */
+//@ServerEndpoint(""/websocket/echoAsyncAnnotation"")
 public class EchoAsyncAnnotation {
 
     StringBuilder sb = null;
```


File: webapps/examples/WEB-INF/classes/websocket/echo/EchoStreamAnnotation.java
Status: modified
```diff
@@ -25,6 +25,11 @@
 import javax.websocket.Session;
 import javax.websocket.server.ServerEndpoint;
 
+/**
+ * The three annotated echo endpoints can be used to test with Autobahn and
+ * the following command ""wstest -m fuzzingclient -s servers.json"". See the
+ * Autobahn documentation for setup and general information.
+ */
 @ServerEndpoint(""/websocket/echoStreamAnnotation"")
 public class EchoStreamAnnotation {
 
```",Add some info and disable the async test (one CVE saved hehe).,1,3,4,3,add some comments,2,2,4,4,"Style: Add comments to EchoAnnotation, EchoAsyncAnnotation, and EchoStreamAnnotation classes This commit adds comments to the EchoAnnotation, EchoAsyncAnnotation, and EchoStreamAnnotation classes in the webapps/examples/WEB-INF/classes/websocket/echo directory. The comments provide information about the purpose of these classes and how to use them. In EchoAsyncAnnotation.java, the @ServerEndpoint annotation was also commented out.",4,4,4,4,"feat: Document Autobahn testing for WebSocket echo endpoints
Add comments to EchoAnnotation, EchoAsyncAnnotation, and EchoStreamAnnotation classes to provide information on how to test them with Autobahn.","feat: Add Autobahn testing documentation to WebSocket echo endpoints
This commit adds documentation to the WebSocket echo endpoints (EchoAnnotation, EchoAsyncAnnotation, and EchoStreamAnnotation) to facilitate testing with Autobahn using the command 'wstest -m fuzzingclient -s servers.json'. The added comments provide setup and general information for Autobahn testing.",10.71,31.58,31.19,11.09,35.14,21.87
50ba973a15874c2597b26f45fd7edc7d92dfd985,apache/tomcat,,"File: modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java
Status: modified
```diff
@@ -150,7 +150,7 @@ public void poolStarted(ConnectionPool pool) {
     @Override
     protected String reportFailedQuery(String query, Object[] args, String name, long start, Throwable t) {
         query = super.reportFailedQuery(query, args, name, start, t);
-        notifyJmx(query,FAILED_QUERY_NOTIFICATION);
+        if (isLogFailed()) notifyJmx(query,FAILED_QUERY_NOTIFICATION);
         return query;
     }
 
@@ -184,7 +184,7 @@ protected void notifyJmx(String query, String type) {
     @Override
     protected String reportSlowQuery(String query, Object[] args, String name, long start, long delta) {
         query = super.reportSlowQuery(query, args, name, start, delta);
-        notifyJmx(query,SLOW_QUERY_NOTIFICATION);
+        if (isLogSlow()) notifyJmx(query,SLOW_QUERY_NOTIFICATION);
         return query;
     }
 
```","In SlowQueryReportJmx, the LogSlow and logFailed attributes that inherited from SlowQueryReport are used as a condition of whether JMX notifications are sent.",4,4,4,4,fix SlowQueryReportJmx reportFailedQuery,1,3,4,4,Fix: Add logging condition before JMX notification in SlowQueryReportJmx This commit adds a condition to check if logging of slow or failed queries is enabled before notifying JMX in the `reportSlowQuery` and `reportFailedQuery` methods of the `SlowQueryReportJmx.java` file. This prevents unnecessary JMX notifications when logging is not enabled.,4,4,4,4,"refactor: Notify JMX for slow and failed queries conditionally
Modified reportSlowQuery and reportFailedQuery methods to respect logging configuration, making JMX notifications more flexible and configurable.","refactor: Conditionally notify JMX for slow and failed queries
Modified SlowQueryReportJmx to only notify JMX for slow and failed queries if logging is enabled, making the reporting more configurable and flexible.",4.9,25.32,23.2,6.57,27.4,25.35
6bd6795f7596d2d711d1bf40fdb932d0b7ee26e4,apache/tomcat,,"File: java/org/apache/coyote/http2/Http2UpgradeHandler.java
Status: modified
```diff
@@ -524,7 +524,7 @@ void writeBody(Stream stream, ByteBuffer data, int len, boolean finished) throws
                 if (!stream.isActive()) {
                     activeRemoteStreamCount.decrementAndGet();
                 }
-             }
+            }
             ByteUtil.set31Bits(header, 5, stream.getIdentifier().intValue());
             socketWrapper.write(true, header, 0, header.length);
             socketWrapper.write(true, data.array(), data.arrayOffset() + data.position(),
@@ -545,6 +545,7 @@ void writeWindowUpdate(Stream stream, int increment) throws IOException {
             // Change stream Id and re-use
             ByteUtil.set31Bits(frame, 5, stream.getIdentifier().intValue());
             socketWrapper.write(true, frame, 0, frame.length);
+            socketWrapper.flush(true);
         }
     }
 
```",A flush seems to be missing when writing a window update [for consistency at least].,4,4,4,4,add missing newline,0,0,4,4,Style: Correct indentation and add flush operation Corrected the indentation in the writeBody method and added a flush operation in the writeWindowUpdate method in the Http2UpgradeHandler class. The functionality of the methods remains unchanged.,4,4,4,4,"fix: Flush socket wrapper after writing
Added a call to socketWrapper.flush(true) to ensure that written data is sent over the network.","fix: Ensure socket wrapper is flushed after writing
This commit fixes an issue where the socket wrapper was not being flushed after writing, which could lead to incomplete data being sent. The fix involves adding a call to `socketWrapper.flush(true)` after writing to the socket. This ensures that all data is properly sent and received.",3.48,9.09,16.72,3.96,10.91,5.8
778890c392dda8cd845db6871ca3ab9ead8b38bc,apache/tomcat,,"File: java/org/apache/tomcat/util/compat/JrePlatform.java
Status: modified
```diff
@@ -23,8 +23,6 @@
 public class JrePlatform {
 
     private static final String OS_NAME_PROPERTY = ""os.name"";
-    private static final String OS_NAME_WINDOWS_PREFIX = ""Windows"";
-    private static final String OS_NAME_MAC_OS_LC_PREFIX = ""mac os x"";
 
     static {
         /*
@@ -53,9 +51,9 @@ public String run() {
                 });
         }
 
-        IS_MAC_OS = osName.toLowerCase(Locale.ENGLISH).startsWith(OS_NAME_MAC_OS_LC_PREFIX);
+        IS_MAC_OS = osName.toLowerCase(Locale.ENGLISH).startsWith(""mac os x"");
 
-        IS_WINDOWS = osName.startsWith(OS_NAME_WINDOWS_PREFIX);
+        IS_WINDOWS = osName.startsWith(""Windows"");
     }
 
 
```",Inlined strings that are used only once,4,4,4,4,remove unused constant,0,1,4,4,Refactor: Remove redundant constants in JrePlatform.java This commit removes the constants OS_NAME_WINDOWS_PREFIX and OS_NAME_MAC_OS_LC_PREFIX in JrePlatform.java and uses their values directly in the code. This simplifies the code and improves readability.,4,4,4,4,"refactor: Use string literals for OS platform detection
Removed unnecessary constants OS_NAME_WINDOWS_PREFIX and OS_NAME_MAC_OS_LC_PREFIX, simplifying the JrePlatform class.","refactor: Simplify OS platform detection
Remove unnecessary constants and directly use the OS name prefixes in the condition checks. This change improves the internal structure of the JrePlatform class, making it easier to understand and maintain.",4.82,26.32,26.65,34.73,42.42,21.85
5e52f14fc533ab7f29949f19830bc88a7c12c08f,apache/tomee,,"File: container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiBuilder.java
Status: modified
```diff
@@ -24,6 +24,7 @@
 import org.apache.openejb.assembler.classic.EjbJarInfo;
 import org.apache.openejb.core.ThreadContext;
 import org.apache.openejb.loader.SystemInstance;
+import org.apache.webbeans.config.WebBeansContext;
 import org.apache.webbeans.config.WebBeansFinder;
 import org.apache.webbeans.logger.WebBeansLogger;
 
@@ -33,11 +34,16 @@
 public class CdiBuilder {
     private static final WebBeansLogger logger = WebBeansLogger.getLogger(CdiBuilder.class);
 
+    private static final WebBeansContext noContext = new WebBeansContext();
+
     public CdiBuilder() {
     }
 
     public void build(AppInfo appInfo, AppContext appContext, List<BeanContext> allDeployments) {
-        if (!hasBeans(appInfo)) return;
+        if (!hasBeans(appInfo)) {
+            appContext.setWebBeansContext(noContext);
+            return;
+        }
 
         ThreadSingletonService singletonService = SystemInstance.get().getComponent(ThreadSingletonService.class);
         logger.info(""existing thread singleton service in SystemInstance() "" + singletonService);
```","Use an ""empty"" context if there is no beans.xml",2,4,4,4,fix failing test,0,0,4,4,"feat: Set WebBeansContext to noContext for apps without beans In the CdiBuilder class, the build method now sets the WebBeansContext to a new instance of WebBeansContext (noContext) if the application does not have any beans. This change could potentially affect the initialization and building of the CDI context.",4,4,4,4,"refactor: Enhance CdiBuilder to handle apps with no beans
Initialize WebBeansContext in build method and set it to appContext when app has no beans. This change improves the CDI container building process.","refactor: Improve CdiBuilder to handle no beans case
This commit refactors the CdiBuilder class to handle the case where an application has no beans. It introduces a new WebBeansContext instance and sets it in the AppContext when no beans are present. This change improves the internal structure of the CdiBuilder class, making it more robust and easier to maintain.",8.43,30.19,36.4,9.41,27.85,30.25
8536f808d7d477652a14162213298381fd5d0d62,apache/usergrid,,"File: stack/rest/src/test/java/org/usergrid/rest/management/users/MUUserResourceIT.java
Status: modified
```diff
@@ -68,7 +68,7 @@ public class MUUserResourceIT extends AbstractRestIT
      *
      * From USERGRID-2075
      */
-    @Test
+    @Test @Ignore(""aok - check this please"")
     public void testCaseSensitivityAdminUser() throws Exception
     {
         LOG.info( ""Starting testCaseSensitivityAdminUser()"" );
```","not sure why this fails during batch testing, but it succeeds singly",3,0,4,3,ignore failing test for now,4,4,4,4,Fix: Temporarily disable testCaseSensitivityAdminUser test The testCaseSensitivityAdminUser test in MUUserResourceIT.java has been temporarily disabled by adding an @Ignore annotation. This is a temporary fix and needs to be revisited.,4,4,4,4,"fix: Temporarily ignore testCaseSensitivityAdminUser test
The test case is currently failing due to case sensitivity issues in admin user authentication. This change ignores the test until the issue is resolved.","fix: Ignore testCaseSensitivityAdminUser due to case sensitivity issue
Temporarily ignoring testCaseSensitivityAdminUser test case to investigate case sensitivity issue in admin user authentication. The test case checks the sensitivity of admin user credentials, specifically testing if the system is case-insensitive when authenticating admin users.",5.19,16.67,18.58,7.83,23.73,27.08
7799aa5470f4f89550782a426a068ef555c0f242,apache/wicket,,"File: jdk-1.4/wicket/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java
Status: modified
```diff
@@ -326,11 +326,11 @@ public void testRenderHomePage_6() throws Exception
 
 	/**
 	 * @throws Exception
+	 */
 	public void testRenderHomePage_7() throws Exception
 	{
 		executeTest(SimplePage_7.class, ""SimplePageExpectedResult_7.html"");
 	}
-	 */
 
 	/**
 	 * @throws Exception
```",enabled the failing test again,2,4,4,4,fix typo in javadoc,0,0,4,4,Feat: Adjust comment in SimplePageTest.java This commit adjusts the placement of a comment in the SimplePageTest.java file. The change is minor and does not affect the functionality of the code.,2,4,4,4,"fix: Fix Javadoc comment in SimplePageTest.java
Added a closing tag to the Javadoc comment to ensure proper formatting.","style: Format code in SimplePageTest.java
Removed trailing whitespace and added a missing closing comment in the testRenderHomePage_7 method.",8.83,23.53,17.39,8.85,20.0,9.8
1a8fb5902ea2c8421494a809b551e1f4f4f2b66b,apache/cxf,,"File: rt/rs/description-swagger-ui/src/main/java/org/apache/cxf/jaxrs/swagger/OsgiSwaggerUiResolver.java
Status: modified
```diff
@@ -48,8 +48,8 @@ public String findSwaggerUiRootInternal(String swaggerUiMavenGroupAndArtifact,
                 return null;
             }
             if (bundle.getState() != Bundle.ACTIVE) {
-				bundle.start();
-			}
+                bundle.start();
+            }
             String[] locations = swaggerUiMavenGroupAndArtifact == null ? DEFAULT_LOCATIONS
                 : new String[]{""mvn:"" + swaggerUiMavenGroupAndArtifact + ""/"",
                                ""wrap:mvn:"" + swaggerUiMavenGroupAndArtifact + ""/""};
```",Update OsgiSwaggerUiResolver.java Fixed indent,3,3,4,4,fix npe in OsgiSwaggerUiResolver,2,2,4,4,Style: Adjust indentation in OsgiSwaggerUiResolver.java The indentation in the method findSwaggerUiRootInternal of the OsgiSwaggerUiResolver.java file has been adjusted for better readability. No changes have been made to the functionality of the code.,4,4,4,4,"fix: Start inactive bundles before accessing their context
Fixed issue where bundle.getBundleContext() would throw an NPE in Equinox if the bundle is found but not active. Also added debug logging to point to possible problems.","fix: Prevent NPE when annotations bundle is found but not active
Fixes an issue where bundle.getBundleContext() would throw a NullPointerException in Equinox if the bundle is found but not active. This change ensures that the bundle is started before accessing its context, and also logs an exception in debug mode to point to a possible problem.",2.96,8.89,13.77,4.34,8.7,8.77
82b24f6db4537623370ebfc7a229562253a16197,apache/cxf,,"File: rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/AbstractHTTPServlet.java
Status: modified
```diff
@@ -480,7 +480,7 @@ private static class HttpServletRequestXForwardedFilter extends HttpServletReque
                                            String originalPort) {
             super(request);
             this.newProtocol = originalProto;
-            if (newRemoteAddr != null) {
+            if (originalRemoteAddr != null) {
                 newRemoteAddr = (originalRemoteAddr.split("","")[0]).trim();
             }
             newRequestUri = calculateNewRequestUri(request, originalPrefix);
```",Fix newRemoteAddr is never assigned * Using the wrong variable for not null validation before HttpServletRequestXForwardedFilter.newRemoteAddr assignment.,4,4,4,4,improve error messages for AbstractHTTPServlet,0,0,4,4,Fix: Correct condition check in AbstractHTTPServlet The condition in the AbstractHTTPServlet.java file has been modified to check if 'originalRemoteAddr' is not null instead of 'newRemoteAddr'. This change ensures that the correct variable is checked before proceeding with the method execution.,4,4,4,4,"fix: Assign newRemoteAddr correctly in AbstractHTTPServlet
Using originalRemoteAddr instead of newRemoteAddr for not null validation, ensuring the X-Forwarded-For header is considered.","fix: Fix newRemoteAddr assignment
Fixes the issue where newRemoteAddr was never assigned due to incorrect null validation. The variable originalRemoteAddr is now correctly used for null validation before assignment.",4.8,23.19,14.71,5.11,26.23,23.73
